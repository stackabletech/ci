# ---------------------------------------------------------------------------------------------
# This Jenkins job has been generated by the Stackable Jenkins Job Builder
# ---------------------------------------------------------------------------------------------

# We're using Docker from within a Docker container, so we have to make sure to provide
# the Docker daemon with the proper absolute path for volume mounts.
# HOST_WORKSPACE is the absolute path of this job's workspace folder as used on the actual Docker host.
export HOST_WORKSPACE=`echo $WORKSPACE | sed 's~jenkins_home~jenkins/data~'`

# The Replicated Testrunner Docker container we're using is running under root (and must do so), so
# we're providing it with a User/Group ID so that it can write the output files using this User/Group.
# Otherwise we might end up with root-owned files which cannot be cleaned up by Jenkins
export DOCKER_UID_GID="$(id -u):$(id -g)"

# Pull Replicated Testrunner Docker image
docker pull docker.stackable.tech/replicated-testrunner:latest

# Read the keys of the selection parameters
export PLATFORM=`echo $TEST_PLATFORM | cut -d '<' -f 2 | cut -d '|' -f 1`
export PLATFORM_VERSION=`echo $TEST_PLATFORM | cut -d '<' -f 2 | cut -d '|' -f 2 | cut -d '>' -f 1`
export GIT_BRANCH=`echo $GIT_BRANCH_OR_TAG | sed s#origin/##g`

# This string can be parsed by the description-setter publisher
echo "build_run_label::#${PLATFORM} | ${PLATFORM_VERSION} | ${BUILD_USER}#"

env