---
{% for testsuite in testsuites %}
- job:
    name: {{ testsuite.name }}-it-nightly
    project-type: freestyle
    defaults: global
    description: ''
    disabled: false
    display-name: '{{ testsuite.display_name }} nightly test'
    concurrent: false
    quiet-period: 5
    logrotate:
      daysToKeep: -1
      numToKeep: 20
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
    scm:
      - git:
          url: https://github.com/stackabletech/{{ testsuite.git_repo }}.git
          branches:
            - origin/main
          browser: githubweb
          browser-url: https://github.com/stackabletech/{{ testsuite.git_repo }}.git
          timeout: 20
    wrappers:
      - credentials-binding:
          - text:
              credential-id: T2_TOKEN
              variable: T2_TOKEN

    triggers:
      - timed: "H 1 * * *"
    builders:
      - shell: 
          unstable-return: 255
          command: |
            # ---------------------------------------------------------------------------------------------
            # This Jenkins job has been generated by the Stackable CI Testing Toolbox
            # ---------------------------------------------------------------------------------------------

            # We're using Docker from within a Docker container, so we have to make sure to provide
            # the Docker daemon with the proper absolute path for volume mounts.
            # HOST_WORKSPACE is the absolute path of this job's workspace folder as used on the actual Docker host.
            export HOST_WORKSPACE=`echo $WORKSPACE | sed 's~jenkins_home~jenkins/data~'`

            # The T2 testdriver Docker image we're using is running under root (and must do so), so
            # we're providing it with a User/Group ID so that it can write the output files using this User/Group.
            # Otherwise we might end up with root-owned files which cannot be cleaned up by Jenkins
            export DOCKER_UID_GID="$(id -u):$(id -g)"

            # Pull the testdriver Docker image
            docker pull docker.stackable.tech/t2-testdriver:latest
            
            # Create testsuite files
            mkdir -p testsuite/
            docker run --rm \
              --volume "$HOST_WORKSPACE/testsuite/:/target/" \
              --env TESTSUITE={{ testsuite.name }} \
              --env PLATFORM={{ testsuite.nightly_test.platform }} \
              --env GIT_BRANCH=main \
              --env OPERATOR_VERSION=NIGHTLY \
              docker.stackable.tech/testing-toolbox:latest create-testsuite

            # Run testdriver
            mkdir -p testsuite/target/
            docker run --rm \
                --volume "$HOST_WORKSPACE/testsuite/target/:/target/" \
                --volume "$HOST_WORKSPACE/testsuite/cluster.yaml:/cluster.yaml" \
                --volume "$HOST_WORKSPACE/testsuite/test.sh:/test.sh" \
                --env T2_TOKEN=$T2_TOKEN \
                --env T2_URL=https://t2.stackable.tech \
                --env UID_GID=$DOCKER_UID_GID \
                docker.stackable.tech/t2-testdriver    
    publishers:
      - archive:
          artifacts: 'testsuite/target/*'
          allow-empty: true
      - slack: 
          room: '{{ testsuite.nightly_test.slack_channels }}'
          notify-unstable: True
          notify-every-failure: True
          notify-back-to-normal: True
          include-custom-message: True
          custom-message: |
            (<$BUILD_URL|Open in classic Jenkins UI>)
{% endfor %}

